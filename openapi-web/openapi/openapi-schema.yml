openapi: 3.0.2
info:
  version: 1.0.0
  title: golang-example-app
servers:
  - url: http://localhost:3000/v1/
    description: example local server
paths:
  /users:
    get:
      tags:
        - example
      summary: all users
      operationId: getUsers
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponses'
    post:
      tags:
        - example
      summary: create user
      operationId: postUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleStatusResponse'
  /users/{userId}:
    put:
      tags:
        - example
      summary: update user
      operationId: putUser
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserRequest'
      responses:
        '204':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUserRequest'

components:
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
  schemas:
    SimpleStatusResponse:
      properties:
        status:
          type: integer
    GetUserResponses:
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/GetUserResponse'
    GetUserResponse:
      properties:
        name:
          type: string
        age:
          type: integer
    PostUserRequest:
      required:
        - name
        - age
      properties:
        name:
          type: string
          minLength: 1
        age:
          type: integer
    PutUserRequest:
      required:
        - name
        - age
      properties:
        name:
          type: string
          minLength: 1
        age:
          type: integer
