require 'yaml'

task :default => [:init]

def force_sh(cmd)
  begin
    sh cmd
  rescue => e
    puts e.message
  end
end

task :init => [:create_network, :clean_server, :clean_db, :create_serevr, :create_database]

task :restart => [:clean_server, :create_serevr]

task :clean_server do
  cmd = <<-EOS
    pushd server
    docker-compose down
    popd
  EOS
  sh cmd
end

task :clean_db do
  cmd = <<-EOS
    pushd db
    docker-compose down
    popd
  EOS
  sh cmd
end

task :create_serevr do
  cmd = <<-EOS
    pushd server
    docker-compose build
    docker-compose up -d
    popd
  EOS
  sh cmd
end

task :create_database do
  cmd = <<-EOS
    pushd db
    docker-compose build
    docker-compose up -d
    popd
  EOS
  sh cmd
end

task :prune do
  force_sh 'docker volume prune -f > /dev/null 2>&1'
  force_sh 'docker rmi -f $(docker images -f "dangling=true" -q) > /dev/null 2>&1'
end

task :create_network do
  force_sh 'docker network create --driver bridge golang_example_app'
end
